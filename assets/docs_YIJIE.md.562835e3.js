import{_ as n,o as s,c as a,N as t}from"./chunks/framework.79b88b02.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/YIJIE.md","lastUpdated":1690947822000}'),p={name:"docs/YIJIE.md"},o=t(`<h2 id="移动端适配" tabindex="-1">移动端适配 <a class="header-anchor" href="#移动端适配" aria-label="Permalink to &quot;移动端适配&quot;">​</a></h2><p>方法名： <code>useMatchScreen()</code><br> 场景：对移动端用rem进行适配</p><div class="language-ts"><pre><code>
<span class="token comment">/**
 * 配置适配
 */</span>
<span class="token keyword">const</span> useMatchScreen <span class="token operator">=</span> <span class="token punctuation">(</span>isListener <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> basicNum <span class="token operator">=</span> <span class="token number">375</span><span class="token punctuation">,</span> doc <span class="token operator">=</span> document<span class="token punctuation">,</span> win <span class="token operator">=</span> window<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> docEl <span class="token operator">=</span> doc<span class="token punctuation">.</span>documentElement<span class="token punctuation">,</span>
      resizeEvt <span class="token operator">=</span> <span class="token string">&#39;orientationchange&#39;</span> <span class="token keyword">in</span> window <span class="token operator">?</span> <span class="token string">&#39;orientationchange&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">recalc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> clientWidth <span class="token operator">=</span> docEl<span class="token punctuation">.</span>clientWidth
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>clientWidth<span class="token punctuation">)</span> <span class="token keyword">return</span>
        <span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token punctuation">(</span>clientWidth <span class="token operator">/</span> num<span class="token punctuation">)</span>
        docEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> fs <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span>
        <span class="token keyword">const</span> realfs <span class="token operator">=</span>
          <span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token operator">+</span>window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">)</span><span class="token punctuation">.</span>fontSize<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;px&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token operator">/</span>
          <span class="token number">10000</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fs <span class="token operator">!==</span> realfs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          docEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> fs <span class="token operator">*</span> <span class="token punctuation">(</span>fs <span class="token operator">/</span> realfs<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isListener <span class="token operator">&amp;&amp;</span> doc<span class="token punctuation">.</span>addEventListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        win<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>resizeEvt<span class="token punctuation">,</span> <span class="token function">recalc</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> basicNum<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
        doc<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;DOMContentLoaded&#39;</span><span class="token punctuation">,</span> <span class="token function">recalc</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> basicNum<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> recalc
  <span class="token punctuation">}</span>

  <span class="token keyword">export</span> <span class="token keyword">default</span> useMatchScreen</code></pre><p>YIJIE/useMatchScreen</p></div>`,3),e=[o];function c(l,u,k,r,i,d){return s(),a("div",null,e)}const _=n(p,[["render",c]]);export{m as __pageData,_ as default};
