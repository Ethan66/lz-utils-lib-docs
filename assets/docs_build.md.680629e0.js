import{_ as s,o as n,c as a,N as p}from"./chunks/framework.27c7f8b4.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/build.md","lastUpdated":1715592070000}'),t={name:"docs/build.md"},o=p(`<h2 id="创建git信息" tabindex="-1">创建git信息 <a class="header-anchor" href="#创建git信息" aria-label="Permalink to &quot;创建git信息&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> execSync </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">child_process</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">execSync</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> build </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lz-utils-lib/lib/index.cjs.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">build</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createGitInfo</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">fs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> fs</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">execSync</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> execSync</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">scriptTagId</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">script-git-info</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 根据项目传入，保证唯一</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">gitInfoPath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dist/source/static/gitInfo.json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 根据项目传入</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">htmlPath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dist/index.html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 根据项目传入</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">gitInfoScriptPath</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">h5/source/static/gitInfo.json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 根据项目传入</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="比较本地和远程git信息" tabindex="-1">比较本地和远程git信息 <a class="header-anchor" href="#比较本地和远程git信息" aria-label="Permalink to &quot;比较本地和远程git信息&quot;">​</a></h2><p>方法名：<code>compareGitInfo(postUrl, scriptTagId)</code><br> 场景：通过比较本地和远程的gitInfo来判断本地页面是否缓存<br><br> 使用说明：<br> 开始比较：const result = compareGitInfo(&#39;<a href="https://ai.com/gitInfo.json" target="_blank" rel="noreferrer">https://ai.com/gitInfo.json</a>&#39;, &#39;#script-git-info&#39;)<br> 本地是最新页面回调：result.then(data =&gt; {})<br> 本地是缓存页面回调：result.catch(data =&gt; {})</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">TGitInfo</span> <span class="token operator">=</span> <span class="token punctuation">{</span> commitId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">compareGitInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span>postUrl<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> divTagId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>postUrl<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>d <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> data
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> msg<span class="token operator">:</span> <span class="token string">&#39;返回数据不是json格式，请确认文件地址&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> divGitInfo <span class="token operator">=</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>divTagId<span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLDivElement<span class="token punctuation">)</span><span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>gitInfo
    <span class="token keyword">if</span> <span class="token punctuation">(</span>divGitInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> oldData <span class="token operator">=</span> <span class="token punctuation">{</span> commitId<span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span> <span class="token keyword">as</span> TGitInfo
      divGitInfo<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([^&amp;=]+)=([^&amp;]+)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>oldData<span class="token punctuation">[</span>k <span class="token keyword">as</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> oldData<span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldData<span class="token punctuation">.</span>commitId <span class="token operator">&amp;&amp;</span> oldData<span class="token punctuation">.</span>commitId <span class="token operator">!==</span> data<span class="token punctuation">.</span>commitId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> msg<span class="token operator">:</span> <span class="token string">&#39;本地是缓存页面&#39;</span><span class="token punctuation">,</span> data<span class="token operator">:</span> oldData <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> data
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> msg<span class="token operator">:</span> <span class="token string">&#39;没有找到元素，请确定divTagId是否正确&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> compareGitInfo
</code></pre><p>build/compareGitInfo</p></div>`,5),e=[o];function c(l,r,i,u,k,y){return n(),a("div",null,e)}const A=s(t,[["render",c]]);export{d as __pageData,A as default};
