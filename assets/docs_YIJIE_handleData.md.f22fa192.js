import{_ as n,o as s,c as a,N as t}from"./chunks/framework.27c7f8b4.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/YIJIE_handleData.md","lastUpdated":1692697250000}'),p={name:"docs/YIJIE_handleData.md"},o=t(`<h2 id="ase解密" tabindex="-1">ase解密 <a class="header-anchor" href="#ase解密" aria-label="Permalink to &quot;ase解密&quot;">​</a></h2><p>方法名：<code>decryption({ key?: 123, word: &#39;加密文字&#39; })</code><br> 场景：对字符串加密</p><div class="language-ts"><pre><code><span class="token keyword">import</span> CryptoJS <span class="token keyword">from</span> <span class="token string">&#39;crypto-js&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> secretKey <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./secret&#39;</span>

<span class="token comment">// ase解密</span>
<span class="token keyword">const</span> <span class="token function-variable function">decryption</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span> key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> word<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">{</span> key <span class="token operator">=</span> secretKey <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> key<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span> <span class="token operator">=</span> params
  key <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token keyword">const</span> decrypt <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>word<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    mode<span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">ECB</span><span class="token punctuation">,</span>
    padding<span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> decryptedStr <span class="token operator">=</span> decrypt<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">)</span>
  <span class="token keyword">return</span> decryptedStr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> decryption
</code></pre><p>YIJIE/decryption</p></div>`,3),e=[o];function c(r,l,k,u,i,d){return s(),a("div",null,e)}const m=n(p,[["render",c]]);export{_ as __pageData,m as default};
